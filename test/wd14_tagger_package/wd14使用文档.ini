[dbumutils]
    [def]{fill_transparent} 将输入图像中透明部分填充为指定颜色（默认为白色），返回一个没有透明部分的新图像。

    [def]{resize} 调整图像大小，若保持长宽比，则按最小边缩放；若不保持，直接缩放到指定方形大小。最后返回调整后的图像。
    
    [def]{smart_imread} 读取图像文件，对不同格式（如 gif）进行特殊处理，确保能正确读取为 OpenCV 格式的图像。
    
    [def]{smart_24bit} 将 16 位图像转换为 24 位图像，处理灰度图像及带透明通道的图像，统一输出为 24 位格式的图像。
    
    [def]{make_square} 将图像调整为正方形，通过在周围添加白色边框实现，边框宽度足够使图像成为正方形，且边框宽度尽量均匀。
    
    [def]{smart_resize} 在图像已经是正方形的前提下，将图像调整到指定大小。若当前尺寸大于目标尺寸则缩小，反之则放大。

[image]
    [def]{resize} 根据指定的调整大小模式（resize_mode）、宽度（width）和高度（height），调整图像（im）的大小。resize_mode有三种模式可选：
        resize_mode=0：直接将图像调整为指定的宽度和高度。
        resize_mode=1：在保持图像宽高比的前提下，将图像调整为指定的宽度和高度，并将图像居中放置在目标尺寸中，裁剪掉超出部分。
        resize_mode=2：在保持图像宽高比的前提下，将图像调整为适合指定的宽度和高度，并将图像居中放置在目标尺寸中，空白部分用图像自身的内容填充。
        函数最终返回调整大小后的图像。
            
            [def]{resize} 定义了一个内部函数resize，用于调整图像的大小。这个函数使用PIL.Image.resize()方法将图像调整为指定的宽度和高度，并使用Image.LANCZOS重采样滤波器以获得较好的图像质量。

[interrogators]
    [dict]文件中定义了一个名为 interrogators 的字典，该字典存储了多个图像标记模型的配置信息。每个模型配置包括：

[interrogator]
    [class]{Interrogator} 定义了图像标记器的基本接口和通用方法
        [def]{postprocess_tags} 对模型生成的标签和置信度进行后处理。可以根据阈值筛选标签、添加额外标签、排除指定标签、按照字母顺序排序、替换下划线、转义特殊字符等。
        
        [def]{__init__} 接受模型名称
        
        [def]{load} 加载模型的方法
        
        [def]{unload} 卸载模型，释放内存
        
        [def]{interrogate} 执行图像标记的方法

    [class]{WaifuDiffusionInterrogator } 继承自 Interrogator，用于加载和使用 Waifu Diffusion 模型进行图像标记
        [def]{__init__} 接收模型名称、模型文件路径、标签文件路径等参数，并初始化。

        [def]{download} 从 Hugging Face Hub 下载模型文件和标签文件。
        
        [def]{load} 加载模型和标签文件，准备进行推理。
        
        [def]{interrogate} 对输入图像进行预处理，然后使用加载的模型进行推理，返回图像的评级置信度和标签置信度。
    
    [class]{MLDanbooruInterrogator} 继承自 Interrogator，用于加载和使用 ML-Danbooru 模型进行图像标记

[wd14_tagger]
[class]{ImageTagger} 对图像进行标记
    [def]{__init__} 初始化 ImageTagger 类的实例。

    [def]{load_model} 加载指定名称的图像标记模型。
    
    [def]{change_model} 切换当前使用的模型。
    
    [def]{image_interrogate} 对指定路径的图像进行标记。

    